#include "services_refactored_pdune.fcl"
#include "geometry_dune.fcl"
#include "LArG4_dune.fcl"
#include "IonAndScint_dune.fcl"
#include "PDFastSim_dune.fcl"

process_name: ProtoDUNEIG4

services:
{
    # Load the service that manages root files for histograms.
    TFileService:             { fileName: "hists/protodune-I_g4_hists.root" }
    TimeTracker:              {}
    RandomNumberGenerator:    {} #ART native random number generator
    MemoryTracker:            {}
    FileCatalogMetadata:      @local::art_file_catalog_mc
    @table::protodune_larg4_services
    @table::protodune_refactored_simulation_services 
    Geometry:                 @local::protodunev8_refactored_geo
    
    PhysicsList:
    {
        PhysicsListName:                    "MyQGSP_BERT_ArHP"
        DumpList:                           true
        enableNeutronLimit:                 false
        NeutronTimeLimit:                   0.0
        NeutronKinELimit:                   0.0
        enableStepLimit:                    true
        enableOptical:                      false
        enableCerenkov:                     false
        CerenkovStackPhotons:               false
        CerenkovMaxNumPhotons:              100
        CerenkovMaxBetaChange:              10.0
        enableScintillation:                false
        ScintillationStackPhotons:          false
        ScintillationByParticleType:        false
        ScintillationTrackInfo:             false
        ScintillationTrackSecondariesFirst: false
        enableAbsorption:                   false
        enableRayleigh:                     false
        enableMieHG:                        false
        enableBoundary:                     false
        enableWLS:                          false
        BoundaryInvokeSD:                   false
        Verbosity:                          1
        WLSProfile:                         delta
    }
}

source:
{
    module_type:    RootInput
    maxEvents:      10000
    fileNames:      [ "outputs/protodune-I_generator_output.root" ]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
    producers:
    {
        largeant:       @local::protodune_larg4
        IonAndScint:    @local::protodune_ionandscint
        PDFastSim:      @local::protodune_pdfastsim_pvs
        rns:            { module_type: "RandomNumberSaver" }
    }

    analyzers:
    {
    }

    #define the producer and filter modules for this path, order matters, 
    #filters reject all following items.  see lines starting physics.producers below
    simulate:       [ largeant, IonAndScint, PDFastSim, rns ]

    #define the output stream, there could be more than one if using filters 
    stream1:  [ out1 ]

    #trigger_paths is a keyword and contains the paths that modify the art::event, 
    #ie filters and producers
    trigger_paths: [simulate] 

    #end_paths is a keyword and contains the paths that do not modify the art::Event, 
    #ie analyzers and output streams.  these all run simultaneously
    end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
    out1:
    {
        module_type:        RootOutput
        fileName:           "outputs/protodune-I_generator_output.root"
        dataTier:           "generated"
        compressionLevel:   1
        outputCommands:     [ "keep *" ]
    }
}

physics.producers.largeant.ChargeRecoveryMargin: 2.5 # cm
services.LArG4Parameters.UseCustomPhysics:      true
services.LArG4Parameters.EnabledPhysics: [ "LowEnergyEm",
                                           "FastOptical",
                                           "SynchrotronAndGN",
                                           "Ion",
                                           "HadronHP",
                                           "Decay",
                                           "HadronElastic",
                                           "Stopping" ]
services.LArG4Parameters.ModifyProtonCut:   true
services.LArG4Parameters.NewProtonCut:      0.0
# we want to keep all ionization electrons
services.LArG4Parameters.FillSimEnergyDeposits:     true
services.LArG4Parameters.KeepEMShowerDaughters:     true
#services.LArG4Parameters.ParticleKineticEnergyCut:  1e-9 # GeV
services.LArG4Parameters.StoreTrajectories:         true
services.LArG4Parameters.VisualizeNeutrals:         true
#services.LArG4Parameters.VisualizationEnergyCut:    1e-9 # GeV

