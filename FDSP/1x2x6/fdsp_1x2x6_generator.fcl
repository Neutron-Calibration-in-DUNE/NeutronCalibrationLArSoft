#include "services_dune.fcl"
#include "singles_dune.fcl"
#include "textfilegen.fcl"
#include "dune_radiological_model.fcl"
#include "geometry_dune.fcl"

process_name: FDSPNeutronGenerator

services:
{
    # Load the service that manages root files for histograms.
    TFileService:             { fileName: "hists/fdsp_1x2x6_hists.root" }
    TimeTracker:              {}
    RandomNumberGenerator:    {} #ART native random number generator
    MemoryTracker:            {}
    FileCatalogMetadata:      @local::art_file_catalog_mc
    @table::dunefd_1x2x6_simulation_services_refactored 
    # currently, the full detector volume is not refactored   
    # but for the 1x2x6 geometry it is:
    Geometry:                 @local::dune10kt_1x2x6_v4_refactored_geo
}

#Start each new event with an empty event.
source:
{
    module_type: EmptyEvent
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
    maxEvents:   10000
    firstRun:    1           # Run number to use for this file
    firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
    producers:
    {
        generator:  @local::standard_textfilegen        # neutrons from the .dat file
        Ar39:       @local::dune10kt_1x2x6_39ar         # Ar39 decay    - 1.41e-3 Bq/cc
        Co60:       @local::dune10kt_1x2x6_APA          # Co60 decay    - 8.20e-5 Bq/cc
        neutron:    @local::dune10kt_1x2x6_neutron      # Rock neutrons - 7.60e-6 Bq/cc
        Rn222:      @local::dune10kt_1x2x6_PDs          # Rn222 decay   - 5.00e-6 Bq/cc
        K40:        @local::dune10kt_1x2x6_CPA          # K40 decay     - 2.72e-3 Bq/cc
        Ar42:       @local::dune10kt_1x2x6_42ar         # Ar42 decay    - 1.28e-7 Bq/cc
        Kr85:       @local::dune10kt_1x2x6_85kr         # Kr85 decay    - 1.60e-4 Bq/cc
        Rn222:      @local::dune10kt_1x2x6_222rn        # Rn222 decay   - 5.58e-6 Bq/cc
        rns:        { module_type: "RandomNumberSaver" }
    }

    #define the producer and filter modules for this path, order matters, 
    #filters reject all following items.  see lines starting physics.producers below
    simulate: [generator, Ar39, Co60, neutron, Rn222, K40, Ar42, Kr85, Rn222, rns]
 
    #define the output stream, there could be more than one if using filters 
    stream1:  [ out1 ]

    #trigger_paths is a keyword and contains the paths that modify the art::event, 
    #ie filters and producers
    trigger_paths: [simulate] 

    #end_paths is a keyword and contains the paths that do not modify the art::Event, 
    #ie analyzers and output streams.  these all run simultaneously
    end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
    out1:
    {
        module_type:         RootOutput
        fileName:            "outputs/fdsp_1x2x6_generator_output.root"
        dataTier:            "generated"
        compressionLevel:    1
    }
}

physics.producers.generator.InputFileName:  "../dat/FDSP/1x2x6/generator_input.dat"
