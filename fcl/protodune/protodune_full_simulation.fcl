#include "services_refactored_pdune.fcl"
#include "singles_dune.fcl"
#include "textfilegen.fcl"
#include "corsika_protodune.fcl"
#include "dune_radiological_model.fcl"
#include "geometry_dune.fcl"

#include "LArG4_dune.fcl"
#include "IonAndScint_dune.fcl"
#include "PDFastSim_dune.fcl"

#include "caldata_dune.fcl"
#include "wirecell_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "CRT.fcl"

#include "hitfindermodules_dune.fcl"
#include "SpacePointSolver_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_pdune.fcl"
#include "calibration_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "particleid.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "mcreco.fcl"
#include "detsimmodules_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "photpropservices_dune.fcl"
#include "showerfindermodules_dune.fcl"
#include "emshower3d.fcl"
#include "ProtoDUNETriggerFilter.fcl"
#include "OpSlicer.fcl"
#include "T0RecoAnodePiercers.fcl"
#include "numberofhitsfilter.fcl"
#include "protodune_tools_dune.fcl"

#include "tools_dune.fcl"

process_name: pdunefullsim

services:
{
    # Load the service that manages root files for histograms.
    TFileService:             { fileName: "hists/protodune_fullsim_hists.root" }
    TimeTracker:              @local::dune_time_tracker
    MemoryTracker:            @local::dune_memory_tracker
    RandomNumberGenerator:    {} #ART native random number generator
    FileCatalogMetadata:      @local::art_file_catalog_mc
    @table::protodune_larg4_services
    @table::protodune_refactored_simulation_services 
    @table::protodune_reco_services
    Geometry:                 @local::protodunev7_ddg_geo

    PhysicsList:
    {
        PhysicsListName:                    "MyQGSP_BERT_ArHP"
        DumpList:                           true
        enableNeutronLimit:                 false
        NeutronTimeLimit:                   0.0
        NeutronKinELimit:                   0.0
        enableStepLimit:                    true
        enableOptical:                      false
        enableCerenkov:                     false
        CerenkovStackPhotons:               false
        CerenkovMaxNumPhotons:              100
        CerenkovMaxBetaChange:              10.0
        enableScintillation:                false
        ScintillationStackPhotons:          false
        ScintillationByParticleType:        false
        ScintillationTrackInfo:             false
        ScintillationTrackSecondariesFirst: false
        enableAbsorption:                   false
        enableRayleigh:                     false
        enableMieHG:                        false
        enableBoundary:                     false
        enableWLS:                          false
        BoundaryInvokeSD:                   false
        Verbosity:                          1
        WLSProfile:                         delta
    }
}

#Start each new event with an empty event.
source:
{
    module_type: EmptyEvent
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
    maxEvents:   1
    firstRun:    1           # Run number to use for this file
    firstEvent:  1           # number of first event in the file
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
    filters: 
    {
        trigfilter:  @local::pdsp_trigfilter_all
        nhitsfilter: @local::standard_numberofhitsfilter
    }

    producers:
    {
        # generators
        generator:  @local::standard_textfilegen        # neutrons from the .dat file
        Ar39:       @local::protodunesp_39ar            # Ar39 decay    - 1.41e-3 Bq/cc
        Ar42:       @local::protodunesp_42ar            # Ar42 decay    - 1.28e-7 Bq/cc
        Kr85:       @local::protodunesp_85kr            # Kr85 decay    - 1.60e-4 Bq/cc
        Rn222:      @local::protodunesp_222rn           # Rn222 decay   - 5.58e-6 Bq/cc
        cosmic:     @local::protodune_corsika_cmc       # cosmics
        # larg4
        largeant:       @local::protodune_larg4
        IonAndScint:    @local::protodune_ionandscint
        PDFastSim:      @local::protodune_pdfastsim_pvs
        # detsim
        tpcrawdecoder:  @local::wirecell_protodunespmc
        opdigi:         @local::protodune_opdigi_refactor
        crt:            @local::CRTSimRefac_standard
        # reco
        caldata:            @local::producer_adcprep_notool          
        wclsdatasp:         @local::protodunespdata_wctsp
        gaushit:            @local::protodunespmc_gaushitfinder
        cluster3D:          @local::standard_cluster3d
        mcreco:             @local::standard_mcreco
        # rns
        rns:        { module_type: "RandomNumberSaver" }
    }
    analyzers:
    {

        supera: 
        {
            module_type:     "LArSoftSuperaDriver"
            supera_params:   "supera_pdune_basic.fcl"
            out_filename:    "larcv.root"
            unique_filename: true 
            stream:          "mc"
            Verbosity: 0
        }
    }

    #define the producer and filter modules for this path, order matters, 
    #filters reject all following items.  see lines starting physics.producers below
    simulate: [
        generator, Ar39, Ar42, Kr85, Rn222, cosmic, 
        largeant, IonAndScint, PDFastSim, 
        tpcrawdecoder, opdigi, crt,
        caldata, wclsdatasp, gaushit, nhitsfilter, mcreco, cluster3D,
        rns
    ]
    analyze:  [ supera ]
    #define the output stream, there could be more than one if using filters 
    stream1:  [ out1 ]

    #trigger_paths is a keyword and contains the paths that modify the art::event, 
    #ie filters and producers
    trigger_paths: [simulate] 

    #end_paths is a keyword and contains the paths that do not modify the art::Event, 
    #ie analyzers and output streams.  these all run simultaneously
    end_paths:     [analyze]  
}
#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
    out1:
    {
        module_type: RootOutput
        fileName:    "%ifb_%p.root"
        dataTier:    "supera"
        compressionLevel: 1
        # skim output (if needed)
        outputCommands: [ "drop *",  "keep *_mcreco_*_*", "keep recob::Hit*_gaushit_*_*" ]
    }
}

services.message.destinations :
{
    STDCOUT:
    {
        type:      "cout"      #tells the message service to output this destination to cout
        threshold: "INFO"      #tells the message service that this destination applies to WARNING and higher level messages
        categories:
        {
            default:
            {
                limit:       1000  #don't print anything at the infomsg level except the explicitly named categories
                reportEvery: 1
            }
        }
    }
}
# generator
physics.producers.generator.InputFileName:  "../../inputs/protodune/protodune_25_1450_0.dat"
physics.producers.generator.maxEvents:      25

# larg4
physics.producers.largeant.ChargeRecoveryMargin: 2.5 # cm
services.LArG4Parameters.UseCustomPhysics:      true
services.LArG4Parameters.EnabledPhysics: [ "LowEnergyEm",
                                           "FastOptical",
                                           "SynchrotronAndGN",
                                           "Ion",
                                           "HadronHP",
                                           "Decay",
                                           "HadronElastic",
                                           "Stopping" ]
services.LArG4Parameters.ModifyProtonCut:   true
services.LArG4Parameters.NewProtonCut:      0.0
# we want to keep all ionization electrons
services.LArG4Parameters.FillSimEnergyDeposits:     true
services.LArG4Parameters.KeepEMShowerDaughters:     true
# let's try setting this to zero to see what happens.
services.LArG4Parameters.ParticleKineticEnergyCut:  0.0 # GeV
services.LArG4Parameters.StoreTrajectories:         true
services.LArG4Parameters.VisualizeNeutrals:         true
#services.LArG4Parameters.VisualizationEnergyCut:    1e-9 # GeV

# reco
# BackTracker Module labels
services.BackTrackerService.BackTracker.G4ModuleLabel: "largeant"
services.BackTrackerService.BackTracker.SimChannelModuleLabel: "tpcrawdecoder:simpleSC"
services.DetectorPropertiesService:    @local::protodunesp_detproperties
services.DetectorPropertiesService.GetHVDriftfromSamweb:           false
services.DetectorPropertiesService.GetReadOutWindowSizefromSamweb: false
services.DetectorPropertiesService.UseRunDependentTemperature:     false
services.RawDigitPrepService.ToolNames: @local::pdsim_dataprep_tools_wirecell
physics.producers.caldata.DigitLabel:                       "tpcrawdecoder:daq" 
physics.producers.caldata.WireName:                         "dataprep" 
physics.producers.gaushit.CalDataModuleLabel:               "wclsdatasp:gauss"
# Use channel map service for data
services.PdspChannelMapService:                             @local::pdspchannelmap
physics.producers.mcreco.MCParticleLabel: "largeant"
physics.producers.mcreco.SimChannelLabel: "IonAndScint"
physics.producers.mcreco.UseSimEnergyDeposit: true
physics.producers.mcreco.MCRecoPart.SavePathPDGList: 
[
    13,-13,211,-211,111,311,310,
    130,321,-321,2212,2112,2224,2214,2114,1114,3122,
    1000010020,1000010030,1000020030,1000020040 
]
# cluster3d {
# ============================================================================== 
physics.producers.cluster3D.Hit3DBuilderAlg:                                     @local::standard_snippethit3dbuilder
physics.producers.cluster3D.Hit3DBuilderAlg.HitFinderTagVec:                     ["gaushit"]
physics.producers.cluster3D.Hit3DBuilderAlg.NumSigmaPeakTime:                    3.0
physics.producers.cluster3D.Hit3DBuilderAlg.HitWidthScaleFactor:                 3.0
physics.producers.cluster3D.Hit3DBuilderAlg.DeltaPeakTimeSig:                    1.75
physics.producers.cluster3D.Hit3DBuilderAlg.WirePitchScaleFactor:                3.0
physics.producers.cluster3D.Hit3DBuilderAlg.MaxHitChiSquare:                     30.
physics.producers.cluster3D.Hit3DBuilderAlg.InvalidTPCVec:                       [0, 3, 4, 7, 8, 11]
# following beam side only
#physics.producers.cluster3D.Hit3DBuilderAlg.InvalidTPCVec:                       [0,2,3,4,6,7,8,10,11]
physics.producers.cluster3D.ClusterAlg:                                          @local::standard_cluster3ddbscanalg
physics.producers.cluster3D.EnableMonitoring:                                    true
physics.producers.cluster3D.ClusterAlg.MinPairPts:                               1
physics.producers.cluster3D.ClusterAlg.kdTree.PairSigmaPeakTime:                 3.0
physics.producers.cluster3D.ClusterAlg.kdTree.RefLeafBestDist:                   1.25 #0.75
physics.producers.cluster3D.ClusterAlg.kdTree.MaxWireDeltas:                     4
physics.producers.cluster3D.ClusterMergeAlg.MinEigenToProcess:                   5 #50
physics.producers.cluster3D.ClusterMergeAlg.MinTransEigenVal:                    1. #0.5
physics.producers.cluster3D.ClusterMergeAlg.NumTransEigenVals:                   3. #30.
physics.producers.cluster3D.ClusterMergeAlg.OutputHistograms:                    true
physics.producers.cluster3D.ClusterPathAlg:                                      @local::standard_convexhullPathAlg
physics.producers.cluster3D.ClusterPathAlg.MinTinyClusterSize:                   200000 #20 #30 #40 #200000
physics.producers.cluster3D.ClusterPathAlg.MinEigen0To1Ratio:                    12.
physics.producers.cluster3D.ClusterPathAlg.ClusterAlg.MinPairPts:                1
physics.producers.cluster3D.ClusterPathAlg.ClusterAlg.kdTree.PairSigmaPeakTime:  3.0
physics.producers.cluster3D.ClusterPathAlg.ClusterAlg.kdTree.RefLeafBestDist:    0.75
physics.producers.cluster3D.Hit3DBuilderAlg.OutputHistograms:                    false
physics.producers.cluster3D.ClusterMergeAlg.OutputHistograms:                    false